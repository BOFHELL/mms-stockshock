diff --git a/node_modules/puppeteer-extra/dist/index.d.ts b/node_modules/puppeteer-extra/dist/index.d.ts
index 3f22e7c..5acffd5 100644
--- a/node_modules/puppeteer-extra/dist/index.d.ts
+++ b/node_modules/puppeteer-extra/dist/index.d.ts
@@ -7,13 +7,13 @@ export interface VanillaPuppeteer {
     /** Attaches Puppeteer to an existing Chromium instance */
     connect(options?: Puppeteer.ConnectOptions): Promise<Puppeteer.Browser>;
     /** The default flags that Chromium will be launched with */
-    defaultArgs(options?: Puppeteer.ChromeArgOptions): string[];
+    defaultArgs(options?: Puppeteer.BrowserLaunchArgumentOptions): string[];
     /** Path where Puppeteer expects to find bundled Chromium */
     executablePath(): string;
     /** The method launches a browser instance with given arguments. The browser will be closed when the parent node.js process is closed. */
     launch(options?: Puppeteer.LaunchOptions): Promise<Puppeteer.Browser>;
     /** This methods attaches Puppeteer to an existing Chromium instance. */
-    createBrowserFetcher(options?: Puppeteer.FetcherOptions): Puppeteer.BrowserFetcher;
+    createBrowserFetcher(options?: Puppeteer.BrowserFetcherOptions): Puppeteer.BrowserFetcher;
 }
 /**
  * Minimal plugin interface
@@ -103,7 +103,7 @@ export declare class PuppeteerExtra implements VanillaPuppeteer {
      *
      * @param options - See [puppeteer docs](https://github.com/puppeteer/puppeteer/blob/master/docs/api.md#puppeteerdefaultargsoptions).
      */
-    defaultArgs(options?: Puppeteer.ChromeArgOptions): string[];
+    defaultArgs(options?: Puppeteer.BrowserLaunchArgumentOptions): string[];
     /** Path where Puppeteer expects to find bundled Chromium. */
     executablePath(): string;
     /**
@@ -111,7 +111,7 @@ export declare class PuppeteerExtra implements VanillaPuppeteer {
      *
      * @param options - See [puppeteer docs](https://github.com/puppeteer/puppeteer/blob/master/docs/api.md#puppeteercreatebrowserfetcheroptions).
      */
-    createBrowserFetcher(options?: Puppeteer.FetcherOptions): Puppeteer.BrowserFetcher;
+    createBrowserFetcher(options?: Puppeteer.BrowserFetcherOptions): Puppeteer.BrowserFetcher;
     /**
      * Patch page creation methods (both regular and incognito contexts).
      *
diff --git a/node_modules/puppeteer-extra/dist/puppeteer.d.ts b/node_modules/puppeteer-extra/dist/puppeteer.d.ts
index b486efc..7584259 100644
--- a/node_modules/puppeteer-extra/dist/puppeteer.d.ts
+++ b/node_modules/puppeteer-extra/dist/puppeteer.d.ts
@@ -1,7 +1,7 @@
 export { Browser } from 'puppeteer';
 export { Page } from 'puppeteer';
 export { ConnectOptions } from 'puppeteer';
-export { ChromeArgOptions } from 'puppeteer';
+export { BrowserLaunchArgumentOptions } from 'puppeteer';
 export { LaunchOptions } from 'puppeteer';
-export { FetcherOptions } from 'puppeteer';
+export { BrowserFetcherOptions } from 'puppeteer';
 export { BrowserFetcher } from 'puppeteer';
